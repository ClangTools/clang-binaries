name: release-opencv
on: [ push, pull_request ]
  #push:
  #  tags:
#    - 'opencv-*'

env:
  OPENCV_VERSION: "4.9.0"
  LLVM_CLANG_VERSION: "15.0.6"
  LLVM_UBUNTU_VERSION: "18.04"
  MINGW_CLANG_VERSION: "20231128"
  MINGW_UBUNTU_VERSION: "20.04"
  MINGW_GCC_TIME_VERSION: "20240109"
  MINGW_GCC_VERSION: "gcc12"

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: get-version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      - name: download
        run: |
          sh opencv/download-src.sh ${{ env.OPENCV_VERSION }}
      - name: Mount toolchains cache  # Optional
        uses: actions/cache@v3
        with:
          path: |
            toolchains/clang+llvm-${{ env.LLVM_CLANG_VERSION }}-x86_64-linux-gnu-ubuntu-${{ env.LLVM_UBUNTU_VERSION }}.tar.xz
            toolchains/llvm-mingw-${{ env.MINGW_CLANG_VERSION }}-msvcrt-ubuntu-${{ env.MINGW_UBUNTU_VERSION }}-x86_64.tar.xz
            toolchains/"mingw-${env.MINGW_GCC_VERSION}.i686.tar.gz"
            toolchains/"mingw-${env.MINGW_GCC_VERSION}.x86_64.tar.gz"
          key: toolchains
      - name: init toolchains
        run: |
          sh toolchains/init-toolchains.sh
      - name: show list
        run: |
          echo $HOME `pwd`
          tree -L 3

      - name: build and package opencv mingw-i686-gcc
        run: |
          sh opencv/cmake-build-mingw-i686-gcc.sh
          cd opencv/build-mingw-i686-gcc/install/
          zip -9 -r mingw-i686.gcc.${{ env.OPENCV_VERSION }}.zip bin include lib LICENSE setup_vars_opencv4.cmd share

      - name: build and package opencv mingw-x86_64-gcc
        run: |
          sh opencv/cmake-build-mingw-x86_64-gcc.sh
          cd opencv/build-mingw-x86_64-gcc/install/
          zip -9 -r mingw-x86_64.gcc.${{ env.OPENCV_VERSION }}.zip bin include lib LICENSE setup_vars_opencv4.cmd share

      - name: build and package opencv mingw-i686-clang
        run: |
          sh opencv/cmake-build-mingw-i686-clang.sh
          cd opencv/build-mingw-i686-clang/install/
          zip -9 -r mingw-i686.clang.${{ env.OPENCV_VERSION }}.zip bin include lib LICENSE setup_vars_opencv4.cmd share

      - name: build and package opencv ubuntu-x86_64
        run: |
          sh opencv/cmake-build-ubuntu-x86_64.sh
          cd opencv/build-ubuntu-x86_64/install/
          tar -zcf ubuntu-x86_64.${{ env.OPENCV_VERSION }}.tar.gz bin include lib share

      #- name: create-release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    tag_name: ${{ needs.setup.outputs.VERSION }}
      #    name: Release ${{ needs.setup.outputs.VERSION }}
      #    files: |
      #      opencv/build-mingw-i686/install/mingw-i686.clang.${{ env.OPENCV_VERSION }}.zip
      #      opencv/build-ubuntu-x86_64/install/ubuntu-x86_64.${{ env.OPENCV_VERSION }}.tar.gz
